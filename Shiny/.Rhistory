getwd()
data = read.csv("data/data_final.csv", stringsAsFactors = FALSE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
data = read.csv("data/data_final.csv", stringsAsFactors = FALSE)
win = data %>%
filter(event_country != '')
data = read.csv("data/data_final.csv", stringsAsFactors = FALSE)
win = data %>%
filter(event_country != '') %>%
group_by( hour = hour(X..timestamp....win..), event_country) %>%
summarise(total= sum(X..Event_type1....win..))
click = data %>%
filter(event_country != '') %>%
filter(X..timestamp....click.. != "") %>%
group_by( hour = hour(X..timestamp....click..), event_country) %>%
summarise(total = sum(X..Event_type1....click..))
df <- reactive({
x <- get(input$select)
})
runApp()
runApp()
install.packages("shinyjs")
runApp()
?fluidRow
runApp()
?box
runApp()
shiny::runApp()
runApp()
data <- read.csv("~/Desktop/shiny_ter/TER/data/data_final.csv")
View(data)
colnames(data)
unique(data$event_os)
country = data %>%
filter(event_country != "")
View(country)
unique(data$event_country)
country = data %>%
filter(event_country != " ")
country = data %>%
filter(event_country != " ")
unique(data$event_country)
country = data %>%
filter(event_country != '')
unique(data$event_country)
country = data %>%
filter(event_country == '')
View(country)
country = data %>%
filter(event_country == ' ')
country = data %>%
filter(event_country == '')
country = data %>%
filter(is.na(event_country))
View(country)
country = data %>%
filter(event_country != '')
unique(country$event_country)
lat = country %>%
filter(lat == "")
lat = country %>%
filter(latitude == "")
lat = country %>%
filter(latitude == " ")
lat = country %>%
filter(is.na(latitude))
View(lat)
View(country)
install.packages("countrycode")
install.packages("countrycode")
library(countrycode)
countrycode()
data$country_code = countrycode(data$event_country, origin = "iso3c", destination= "iso2c")
?countrycode
?codelist
data$country_code = countrycode(data$event_country, "iso3c", "iso2c")
country$country_code = countrycode(country$event_country, "iso3c", "iso2c")
country$country_code
View(country)
unique(country$country_code)
unique(data$event_country)
length(unique(country$country_code))
length(unique(data$event_country))
data = read.csv("data/data_final.csv", stringsAsFactors = FALSE)
shiny::runApp()
runApp()
unique(dara$event_country)
unique(data$event_country)
runApp()
runApp()
runApp()
data = read.csv("data/data_final.csv", stringsAsFactors = FALSE)
data = data %>%
filter(event_country != '')
library(dplyr)
data = data %>%
filter(event_country != '')
View(data)
data$event_country
library(dplyr)
library(lubridate)
library(ggplot2)
data = read.csv("data/data_final.csv", stringsAsFactors = FALSE)
data = data %>%
filter(event_country != '')
win = data %>%
group_by( hour = hour(X..timestamp....win..), event_country) %>%
summarise(total= sum(X..Event_type1....win..))
click = data %>%
filter(X..timestamp....click.. != "") %>%
group_by( hour = hour(X..timestamp....click..), event_country) %>%
summarise(total = sum(X..Event_type1....click..))
runApp()
runApp()
View(data)
data = data_final
data = data
day(data$X..timestamp....win..)
library(dplyr)
library(ggplot2)
library(lubridate)
library(countrycode)
day(data$X..timestamp....win..)
weekdays(data$X..timestamp....win..)
wday(data$X..timestamp....win..)
wday(data$X..timestamp....win.., labels = TRUE)
wday(data$X..timestamp....win.., label = TRUE)
country$weekday = wday(data$X..timestamp....win.., label = TRUE)
country = data %>%
filter(event_country != '')
country$weekday = wday(data$X..timestamp....win.., label = TRUE)
country$region = countrycode(country$event_country, "iso3c", "region")
View(country)
ggplot(country, aes_string(x = weekday , y = X..Event_type1....click..))+
geom_line()
ggplot(country, aes_string(x = country$weekday , y = country$X..Event_type1....click..))+
geom_line()
ggplot(country, aes_string(x = country$weekday , y = country$X..Event_type1....click..))+
geom_bar()
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(y = country$X..Event_type1....click..)
?stat
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes (y = country$X..Event_type1....click..), stat = "count") +
cale_y_continuous(labels=scales::percent) +
write.csv(country,"country.csv")
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes (y = country$X..Event_type1....click..), stat = "count") +
scale_y_continuous(labels=scales::percent) +
write.csv(country,"country.csv")
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes (y = country$X..Event_type1....click.., stat = "count")) +
scale_y_continuous(labels=scales::percent) +
write.csv(country,"country.csv")
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes (y = country$X..Event_type1....click..) )+
scale_y_continuous(labels=scales::percent) +
write.csv(country,"country.csv")
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes (y = country$X..Event_type1....click..) )+
scale_y_continuous(labels=scales::percent)
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes (y = country$X..Event_type1....click..) )+
scale_y_continuous(labels=scales::percent)
ggplot(country, aes_string(x = country$weekday ))+
geom_bar(aes(y = (..count..)/sum(..count..)))
country$weekday = ifelse(!is.na(country$`('timestamp', 'click')`),
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country = data %>%
filter(event_country != '')
country$weekday = ifelse(!is.na(country$`('timestamp', 'click')`),
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country$weekday = ifelse(!is.na(country$`('timestamp', 'click')`),
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
is.na(data$X..timestamp....click..)
View(country)
country$weekday = ifelse(country$`('timestamp', 'click')` == '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country$weekday = ifelse(country$`('timestamp', 'click')` == ' ',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country$weekday = ifelse(country$`('timestamp', 'click')` == ' ',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country$region = countrycode(country$event_country, "iso3c", "region")
test = country %>%
filter(is.na(X..timestamp....click..))
test = country %>%
filter(X..timestamp....click.. == "")
test = country %>%
filter(X..timestamp....click.. == " ")
country$weekday = ifelse(country$`('timestamp', 'click')` == '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country$weekday = ifelse(country$`('timestamp', 'click')` != '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
country$weekday = ifelse(country$`('timestamp', 'click')` != '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
library(readr)
data_final <- read_csv("data/data_final.csv")
View(data_final)
data = data_final
country = data %>%
filter(event_country != '')
country$weekday = ifelse(country$`('timestamp', 'click')` != '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
View(country)
?wday
country$weekday = ifelse(country$`('timestamp', 'click')` != '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
View(country)
country$weekday = ifelse(country$`('timestamp', 'click')` != '',
wday(country$`('timestamp', 'click')`,label = TRUE),
wday(country$`('timestamp', 'win')`,label = TRUE))
unique(data$creative_size)
ggplot(data, aes(x = data$creative_size ))+
geom_bar(aes (y = data$X..Event_type1....click..) )+
scale_y_continuous(labels=scales::percent)
ggplot(data, aes(x = data$creative_size ))+
geom_bar(aes (y = data$`('Event_type1', 'click')`) )+
scale_y_continuous(labels=scales::percent)
ggplot(data, aes(x = data$creative_size ))+
geom_bar(y = data$`('Event_type1', 'click')`)+
scale_y_continuous(labels=scales::percent)
creative = data %>%
group_by(event_country, `('Event_type1', 'click')`, creative_size) %>%
summarise(total = n())
View(creative)
ggplot(data, aes(as.factor(X..Event_type1....click..), fill = event_os)) +
ggplot(data, aes(creative_size, fill = as.factor(X..Event_type1....click..) )) +
geom_bar(position= "fill") +
scale_y_continuous(labels = percent)
ggplot(data, aes(creative_size )+
library(dplyr)
library(ggplot2)
library(lubridate)
library(countrycode)
ggplot(data, aes(creative_size ) +
ggplot(data, aes(creative_size ) +
ggplot(data, aes(creative_size ) +
ggplot(data, aes(as.factor(X..Event_type1....click..), fill = creative_size)) +
geom_bar(position= "fill") +
labs(x = "Click", y ="Pourcentage de clicks", fill = "Type d'OS",
title = "Répartition du type d'OS sachant si la pub a été cliquée ou pas ") +
scale_y_continuous(labels = percent)
ggplot(data, aes(as.factor(X..Event_type1....click..), fill = creative_size)) +
geom_bar(position= "fill") +
labs(x = "Click", y ="Pourcentage de clicks", fill = "Type d'OS",
title = "Répartition du type d'OS sachant si la pub a été cliquée ou pas ") +
scale_y_continuous(labels = percent)
ggplot(data, aes(as.factor(X..Event_type1....click..), fill = creative_size)) +
geom_bar(position= "fill") +
labs(x = "Click", y ="Pourcentage de clicks", fill = "Type d'OS",
title = "Répartition du type d'OS sachant si la pub a été cliquée ou pas ") +
scale_y_continuous(labels = percent)
library(dplyr)
library(ggplot2)
library(lubridate)
library(countrycode)
library(sclaes)
ggplot(data, aes(as.factor(X..Event_type1....click..), fill = creative_size)) +
geom_bar(position= "fill") +
labs(x = "Click", y ="Pourcentage de clicks", fill = "Type d'OS",
title = "Répartition du type d'OS sachant si la pub a été cliquée ou pas ") +
scale_y_continuous(labels = percent)
unique(data$creative_size)
ggplot(creative, aes(x=creative_size, y=total, fill=variable)) +
geom_bar(stat='identity', position='dodge')
ggplot(creative, aes(x=creative_size, y=total)) +
geom_bar(stat='identity', position='dodge')
creative = data %>%
group_by(event_country, `('Event_type1', 'click')`, creative_size) %>%
summarise(total = n()) %>%
filter(`('Event_type1', 'click')` == 1)
ggplot(creative, aes(x=creative_size, y=total)) +
geom_bar(stat='identity', position='dodge')
creative = data %>%
group_by(event_country, `('Event_type1', 'click')`, creative_size) %>%
summarise(total = n())
ggplot(creative, aes(x=creative_size, y=total, fill = `('Event_type1', 'click')`)) +
geom_bar(position='fill') +
scale_y_continuous(labels = percent)
ggplot(creative, aes(x=creative_size, fill = `('Event_type1', 'click')`)) +
geom_bar(position='fill') +
scale_y_continuous(labels = percent)
library(sclaes)
library(scales)
ggplot(creative, aes(x=creative_size, fill = `('Event_type1', 'click')`)) +
geom_bar(position='fill') +
scale_y_continuous(labels = percent)
ggplot(creative, aes(x=creative_size, fill = as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
scale_y_continuous(labels = percent)
ggplot(creative, aes(x=creative_size, fill = as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not",
title = " ") +
scale_y_continuous(labels = percent)
ggplot(creative, aes(x=creative_size, fill = as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
stat_fill_labels() +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not",
title = " ") +
scale_y_continuous(labels = percent)
install.packages("remotes")
library(JLutis)
library(JLutils)
remotes::install_github("larmarange/JLutils")
library(JLutils)
ggplot(creative, aes(x=creative_size, fill = as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
stat_fill_labels() +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not",
title = " ") +
scale_y_continuous(labels = percent)
View(creative)
ggplot(data, aes(x=creative_size, fill = as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
stat_fill_labels() +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not",
+        title = " ") +
scale_y_continuous(labels = percent)
ggplot(data, aes(x=creative_size, fill = as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
stat_fill_labels() +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not") +
scale_y_continuous(labels = percent)
vide = data %>%
filter(is.na(creative_size))
vide = data %>%
filter(creative_size == '')
vide = data %>%
filter(creative_size == ' ')
View(data)
creative = data %>%
group_by(X..Event_type1....click.., creative_size) %>%
dplyr::summarise(total = n())
creative = data %>%
group_by(`('Event_type1', 'click')`, creative_size) %>%
dplyr::summarise(total = n())
View(creative)
5/5+583
5/(5+583)
ggplot(data, aes(fill=creative_size, x= as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
stat_fill_labels() +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not") +
scale_y_continuous(labels = percent)
ggplot(data, aes(fill=creative_size, x= as.factor(`('Event_type1', 'click')`))) +
geom_bar(position='fill') +
#stat_fill_labels() +
labs(x = "creative size ", y ="Pourcentage de cliques", fill = "cliqued or not") +
scale_y_continuous(labels = percent)
shiny::runApp()
library(lmer4)
df  = sleepstudy
library(lme4)
df  = sleepstudy
View(df)
str(df)
unique(df$Subject)
?df
?sleepstudy
unique(df$Days)
interaction.plot(df)
interaction.plot(sleepstudy)
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
